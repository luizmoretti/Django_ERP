# Generated by Django 5.1.5 on 2025-02-15 19:13

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('employeers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, help_text='The name of the vehicle', max_length=50, null=True)),
                ('plate', models.CharField(blank=True, help_text='The tag of the vehicle', max_length=50, null=True)),
                ('drivers_license', models.CharField(blank=True, help_text='The driver license of the vehicle', max_length=50, null=True)),
                ('vehicle_maker', models.CharField(blank=True, choices=[('Ford', 'Ford'), ('Chevrolet', 'Chevrolet'), ('Dodge', 'Dodge'), ('Toyota', 'Toyota'), ('Honda', 'Honda'), ('Nissan', 'Nissan'), ('Jeep', 'Jeep'), ('Mitsubishi', 'Mitsubishi'), ('Kia', 'Kia'), ('BMW', 'BMW'), ('Mercedes-Benz', 'Mercedes-Benz'), ('Audi', 'Audi'), ('Volkswagen', 'Volkswagen'), ('Lexus', 'Lexus'), ('Infiniti', 'Infiniti'), ('Subaru', 'Subaru'), ('GMC', 'GMC'), ('Mazda', 'Mazda'), ('Pontiac', 'Pontiac'), ('Buick', 'Buick'), ('Cadillac', 'Cadillac'), ('Saturn', 'Saturn'), ('GMC', 'GMC'), ('Chrysler', 'Chrysler'), ('Porsche', 'Porsche'), ('Jeep', 'Jeep'), ('Maserati', 'Maserati'), ('Lotus', 'Lotus'), ('Suzuki', 'Suzuki'), ('Scion', 'Scion'), ('Hummer', 'Hummer'), ('Saturn', 'Saturn'), ('GMC', 'GMC'), ('Chrysler', 'Chrysler'), ('Porsche', 'Porsche'), ('Jeep', 'Jeep'), ('Maserati', 'Maserati'), ('Lotus', 'Lotus'), ('Suzuki', 'Suzuki'), ('Scion', 'Scion'), ('Hummer', 'Hummer')], help_text='The maker of the vehicle', max_length=50, null=True)),
                ('vehicle_model', models.CharField(blank=True, help_text='The model of the vehicle', max_length=50, null=True)),
                ('vehicle_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('White', 'White'), ('Red', 'Red'), ('Blue', 'Blue'), ('Green', 'Green'), ('Yellow', 'Yellow'), ('Orange', 'Orange'), ('Purple', 'Purple'), ('Pink', 'Pink'), ('Brown', 'Brown'), ('Gray', 'Gray'), ('Other', 'Other')], help_text='The color of the vehicle', max_length=50, null=True)),
                ('type', models.CharField(blank=True, choices=[('Truck', 'Truck'), ('Van', 'Van'), ('Car', 'Car'), ('SUV', 'SUV'), ('Pickup', 'Pickup')], help_text='The type of the delivery vehicle', max_length=50, null=True)),
                ('vehicle_is_active', models.BooleanField(default=True)),
                ('companie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_companie', to='companies.companie')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to='employeers.employeer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_driver', to='employeers.employeer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to='employeers.employeer')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleMaintenance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('reason', models.TextField(help_text='The reason of the maintenance')),
                ('is_in_service', models.BooleanField(default=True, help_text='Whether the vehicle is still in service')),
                ('is_scheduled', models.BooleanField(default=False, help_text='Whether the maintenance is scheduled')),
                ('date_of_scheduled', models.DateTimeField(blank=True, help_text='The date of the maintenance', null=True)),
                ('companie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_companie', to='companies.companie')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to='employeers.employeer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to='employeers.employeer')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_maintenances', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Maintenance',
                'verbose_name_plural': 'Vehicle Maintenances',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleMaintenanceHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('companie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_companie', to='companies.companie')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to='employeers.employeer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to='employeers.employeer')),
                ('vehicle_maintenance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_history', to='vehicles.vehiclemaintenance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleMilageHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('milage', models.DecimalField(blank=True, decimal_places=2, help_text='The milage of the vehicle', max_digits=10, null=True)),
                ('companie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_companie', to='companies.companie')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to='employeers.employeer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to='employeers.employeer')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milage_history', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Milage History',
                'verbose_name_plural': 'Vehicle Milage Histories',
                'ordering': ['-created_at'],
            },
        ),
    ]
